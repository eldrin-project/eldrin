version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: eldrin-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: eldrin
      POSTGRES_PASSWORD: eldrin_password
      POSTGRES_DB: eldrin_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eldrin"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - eldrin-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: eldrin-pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: tibor.kiray@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - eldrin-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eldrin-api
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://eldrin:eldrin_password@postgres:5432/eldrin_dev
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 3000
      RUST_LOG: eldrin_core=debug,tower_http=debug,axum=debug
      GITHUB_CLIENT_ID: "Ov23liIEe8Q5DMHCweJE"
      GITHUB_CLIENT_SECRET: "1191e6d7e015fbe688474ed596214af482512dcc"
      GITHUB_REDIRECT_URI: "http://localhost:3000/auth/github/callback"
      GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID}"
      GOOGLE_CLIENT_SECRET: "${GOOGLE_CLIENT_SECRET}"
      GOOGLE_REDIRECT_URI: "http://localhost:3000/auth/google/callback"
      FRONTEND_URL: "http://localhost:4200"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eldrin-network
    volumes:
      - ./modules:/app/modules
    command: ["/app/eldrin-core"]

  # You can add additional services here in the future:
  # - Redis for caching
  # - Minio for S3-compatible storage
  # - ElasticSearch for search capabilities
  # - RabbitMQ or Kafka for messaging

networks:
  eldrin-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: